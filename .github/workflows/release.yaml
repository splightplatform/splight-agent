# used when a new feature has already been merged to master
# this step creates a new tag in the github repository, pushes the release
# and uploads the install scripts to the release
name: Release
on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    name: Create release on github repository
    steps:
      - name: Checkout to feature branch
        uses: actions/checkout@v3
      - name: Get version from feature branch
        run: echo "CURRENT_VERSION=$(grep -E 'version' pyproject.toml | awk -F'\"' '{ print $2 }')" >> "$GITHUB_ENV"
      - name: Create tag and release
        uses: softprops/action-gh-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ env.CURRENT_VERSION }}
          tag_name: ${{ env.CURRENT_VERSION }}
      - name: compress setup artifact files
        run: tar -czf ./install_scripts.tar.gz -C install_scripts .
      - name: upload setup artifact files
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./install_scripts.tar.gz
          asset_name: install_scripts-${{ env.CURRENT_VERSION }}.tar.gz
          asset_content_type: application/gzip

  upload_agent_image:
    runs-on: ubuntu-latest
    name: Push agent image to ECR
    steps:
      - name: Checkout to feature branch
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR Private
        id: login-ecr-private
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get version from feature branch
        run: echo "CURRENT_VERSION=$(grep -E 'version' pyproject.toml | awk -F'\"' '{ print $2 }')" >> "$GITHUB_ENV"

      - name: Build agent image
        working-directory: .
        run: |
          docker-compose -f docker-compose.yml build splight-agent
          docker tag splight-agent $SPLIGHT_AGENT_ECR:$VERSION
        env:
          SPLIGHT_AGENT_ECR: ${{ secrets.SPLIGHT_AGENT_ECR }}
          VERSION: ${{ env.CURRENT_VERSION }}

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: 'public'

      - name: Push agent image
        working-directory: .
        run: |
          docker push $SPLIGHT_AGENT_ECR:$VERSION
        env:
          SPLIGHT_AGENT_ECR: ${{ secrets.SPLIGHT_AGENT_ECR }}
          VERSION: ${{ env.CURRENT_VERSION }}
